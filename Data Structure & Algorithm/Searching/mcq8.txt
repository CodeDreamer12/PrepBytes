1) The worst case occur in linear search algorithm when …….
Ans Item is the last element in the array or item is not there at all

2) Which of the following is not a limitation of binary search algorithm?
Ans binary search algorithm is not efficient when the data elements more than 1500

3) Which of the following is not the required condition for binary search algorithm?
Ans There must be mechanism to delete and/or insert elements in list

4) Where is linear searching used?
Ans Both a and b

5) What does the following piece of code do?
for (int i = 0; i < arr.length-1; i++)
{
  for (int j = i+1; j < arr.length; j++)
  {
      if( (arr[i].equals(arr[j])) && (i != j) )
      {
          cout << arr[i];
      }
   }
}
Ans Print the duplicate elements in the array

6) Which of the following is a disadvantage of linear search?
Ans Greater time complexities compared to other searching algorithms

7) Given an array arr = {45,77,89,90,94,99,100} and key = 99; what are the mid values(corresponding array elements) in the first and second levels of recursion in Binary Search?
Ans 90 and 99

8) Binary Search can be categorized into which of the following?
Ans Divide and conquer

9) Given an array arr = {5,6,77,88,99} and key = 88; How many Binary search iterations are done until the element is found?
Ans 2

10) Which of the following is correct recurrence for worst case of Binary Search?
Ans T(n) = T(n/2) + O(1) and T(1) = T(0) = O(1)

11) Consider the following C program that attempts to locate an element x in an array Y[] using binary search. The program is erroneous.
f(int Y[10], int x) {
   int i, j, k;
   i = 0; j = 9;
   do {
        k =  (i + j) /2;
        if( Y[k] < x)  i = k; else j = k;
     } while(Y[k] != x && i < j);
         if(Y[k] == x) cout<< "x is in the array " ;
         else cout << " x is not in the array " ;
 }
12) On which of the following contents of Y and x does the program fail?
Ans Y is [2 2 2 2 2 2 2 2 2 2] and x > 2

13) The time taken by binary search algorithm to search a key in a sorted array of n elements is
Ans O(logn)
